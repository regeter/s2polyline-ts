import { S2Point } from '../src/lib/s2point';
import { S2Polyline } from '../src/lib/s2polyline';

describe('S2Polyline', () => {
  it('returns correct round-trip encode/decode', () => {
    console.log('Testing S2Polyline encode/decode round trip');
    const vertices: S2Point[] = [
      new S2Point(-0.42199704975141455, -0.672932458703067, 0.6075198729465129),
      new S2Point(-0.421995399052585, -0.67293188925597, 0.6075216503144891),
      new S2Point(-0.42200546738364153, -0.672920368221391, 0.6075274179253988),
      new S2Point(-0.42199820709892516, -0.6729173315167561, 0.6075358245812841),
      new S2Point(-0.42199570173444945, -0.6729155077679106, 0.6075395848198737),
      new S2Point(-0.4219940013402585, -0.6729139181527256, 0.6075425265684573),
      new S2Point(-0.4219920733184393, -0.6729112417892072, 0.6075468300716512),
      new S2Point(-0.42197560895429764, -0.6728691742740325, 0.6076048549505106),
      new S2Point(-0.42197128346402857, -0.6728603591793174, 0.6076176206931465),
      new S2Point(-0.4219656992532613, -0.6728464975653324, 0.6076368482636412),
      new S2Point(-0.4219646962509499, -0.672845947558603, 0.6076381538150883),
      new S2Point(-0.42197405696118667, -0.6728395252888876, 0.6076387647778421),
      new S2Point(-0.42197271779439194, -0.6728380412708693, 0.6076413380078697),
      new S2Point(-0.42197029602850766, -0.6728393900741616, 0.6076415262588984),
      new S2Point(-0.42196786927857116, -0.6728358100395367, 0.6076471756084637),
      new S2Point(-0.42196521971737616, -0.6728375192584818, 0.607647122947981),
    ];
    const polyline = new S2Polyline(vertices);
    expect(S2Polyline.decode(polyline.encodeCompact())).toEqual(polyline);
  });
});